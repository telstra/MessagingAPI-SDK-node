/**
 * Telstra Messaging API
 * The Telstra Messaging API specification
 *
 * The version of the OpenAPI document: 2.2.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Message from './Message';

/**
 * The MessageSentResponseMms model module.
 * @module model/MessageSentResponseMms
 * @version 1.0.8
 */
class MessageSentResponseMms {
    /**
     * Constructs a new <code>MessageSentResponseMms</code>.
     * @alias module:model/MessageSentResponseMms
     * @param messages {Array.<module:model/Message>} An array of messages.
     * @param messageType {String} This returns whether the message sent was a SMS or MMS.
     * @param numberSegments {Number} MMS with numberSegments below 600 are classed as Small whereas those that are bigger than 600 are classed as Large. They will be charged accordingly. 
     */
    constructor(messages, messageType, numberSegments) { 
        
        MessageSentResponseMms.initialize(this, messages, messageType, numberSegments);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages, messageType, numberSegments) { 
        obj['messages'] = messages;
        obj['messageType'] = messageType;
        obj['numberSegments'] = numberSegments;
    }

    /**
     * Constructs a <code>MessageSentResponseMms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageSentResponseMms} obj Optional instance to populate.
     * @return {module:model/MessageSentResponseMms} The populated <code>MessageSentResponseMms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageSentResponseMms();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [Message]);
            }
            if (data.hasOwnProperty('MmsMediaKB')) {
                obj['MmsMediaKB'] = ApiClient.convertToType(data['MmsMediaKB'], 'Number');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], [Object]);
            }
            if (data.hasOwnProperty('messageType')) {
                obj['messageType'] = ApiClient.convertToType(data['messageType'], 'String');
            }
            if (data.hasOwnProperty('numberSegments')) {
                obj['numberSegments'] = ApiClient.convertToType(data['numberSegments'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * An array of messages.
 * @member {Array.<module:model/Message>} messages
 */
MessageSentResponseMms.prototype['messages'] = undefined;

/**
 * Indicates the message size in kB of the MMS sent. 
 * @member {Number} MmsMediaKB
 */
MessageSentResponseMms.prototype['MmsMediaKB'] = undefined;

/**
 * An array of the countries to which the destination MSISDNs belong.
 * @member {Array.<Object>} Country
 */
MessageSentResponseMms.prototype['Country'] = undefined;

/**
 * This returns whether the message sent was a SMS or MMS.
 * @member {String} messageType
 */
MessageSentResponseMms.prototype['messageType'] = undefined;

/**
 * MMS with numberSegments below 600 are classed as Small whereas those that are bigger than 600 are classed as Large. They will be charged accordingly. 
 * @member {Number} numberSegments
 */
MessageSentResponseMms.prototype['numberSegments'] = undefined;






export default MessageSentResponseMms;

