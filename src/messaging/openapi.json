{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "\n# Introduction\n\n<table><tbody><tr><td class = 'into_api' style='border:none;padding:0 0 0 0'><p>Send and receive SMS and MMS messages globally using Telstra's enterprise grade Messaging API. It also allows your application to track the delivery status of both sent and received messages. Get your dedicated Australian number, and start sending and receiving messages today.</p></td><td class = 'into_api_logo' style='width: 20%;border:none'><img class = 'api_logo' style='margin: -26px 0 0 0' src = 'https://test-dev.telstra.net/sites/default/files/messagingapi-icon.png'></td></tr></tbody></table>\n\n# Features\n\nThe Telstra Messaging API provides the features below.\n\n| Feature | Description |\n| --- | --- |\n| `Dedicated Number` | Provision a mobile number for your account to be used as `from` address in the API |\n| `Send Messages` | Sending SMS or MMS messages |\n| `Receive Messages` | Telstra will deliver messages sent to a dedicated number or to the `notifyURL` defined by you |\n| `Broadcast Messages` | Invoke a single API call to send a message to a list of numbers provided in `to` |\n| `Delivery Status` | Query the delivery status of your messages |\n| `Callbacks` | Provide a notification URL and Telstra will notify your app when a message status changes |\n| `Alphanumeric Identifier` | Differentiate yourself by providing an alphanumeric string in `from`. This feature is only available on Telstra Account paid plans and support is only guaranteed when sending messages to Telstra destinations |\n| `Concatenation` | Send messages up to 1998 characters long and Telstra will automaticaly segment and reassemble them |\n| `Reply Request` | Create a chat session by associating `messageId` and `to` number to track responses received from a mobile number. We will store this association for 8 days |\n| `Character set` | Accepts all Unicode characters as part of UTF-8 |\n| `Bounce-back response` | See if your SMS hits an unreachable or unallocated number (Australia Only) |\n| `Queuing` | Messaging API will automatically queue and deliver each message at a compliant rate. |\n| `Emoji Encoding` | The API supports the encoding of emojis in the Basic Multilingual Plane U+0000 to U+FFFF. Support for emojis in the Supplementary Planes include those in the U+1F600 to U+1F6FF block. Emojis in the inbound messages will be in their UTF-8 format |\n\n## Free Trial vs Paid Plan Features\nWe welcome you to try the Messaging API with our Free Trial. Limited to the first 100 messages. Some features are not available with Free Trial.\n\nAfter your Free Trial ends, signing up for a Paid Plan will give you access to the full suite of Messaging API features, namely:\n- Have more than 1 provisioned number\n- Send to ANY eligible recipient mobile number (limited to 5 dedicated recipients only in Free Trial)\n- Send unlimited number of paid messages (limited to 100 in Free Trial)\n- Use alphanumeric sender ID (Australian destinations only)\n- Provision dedicated virtual numbers for up to 5 years (30 days only in Free Trial)\n\nCheck out [the FAQ page](https://dev.telstra.com/support/frequently-asked-questions) for our pricing and process for activating a Paid Plan.\n\n## Delivery Status: Notification/Callbacks vs Polling\n\nThe API provides two methods to confirm that a message has been delivered to the destination.\n\n1. When you send a message there is an opportunity to specify a `notifyURL`. Once the message has been delivered, the API will make a call to this URL to advise of the message status.\n2. If you do not specify a URL you can always call the `GET /status` API to get the status of the message.\n\nPlease see [this blog](https://dev.telstra.com/content/understanding-messaging-api-callbacks-part-1) for more information on using callbacks.\n\n# Getting Access to the API\n\n1. Register at [https://dev.telstra.com](https://dev.telstra.com).\n2. After registration, login to [https://dev.telstra.com](https://dev.telstra.com) and navigate to the **My apps** page.\n3. Create your application by clicking the **Add new app** button\n4. Select **API Free Trial** Product when configuring your application. This Product includes the Telstra Messaging API as well as other free trial APIs. Your application will be approved automatically.\n5. There is a maximum of 100 free messages per developer. Additional messages and features can be purchased from [https://dev.telstra.com](https://dev.telstra.com).\n6. Note your `Client key` and `Client secret` as these will be needed to provision a number for your application and for authentication.\n\nNow head over to **Getting Started** where you can find a postman collection as well as some links to sample apps and SDKs to get you started.\n\nHappy Messaging!\n\n# Frequently Asked Questions\n\n**Q: Is creating a subscription via the Provisioning call a required step?**\n\nA. Yes. You will only be able to start sending messages if you have a provisioned dedicated number. Use Provisioning to create a dedicated number subscription, or renew your dedicated number if it has expired.\n\n**Q: When trying to send an SMS I receive a `400 Bad Request` or a `404 RESOURCE-NOT-FOUND` response. How can I fix this?**\n\nA. You need to make sure you have a provisioned dedicated number before you can send an SMS.\n\nUse Provisioning to create a dedicated number subscription, or renew your dedicated number if it has expired.\n\nPerform a GET /provisioning/subscriptions call and ensure that your provisioned number is still actively linked to your API key. Otherwise, you will need to perform a POST /provisioning/subscriptions call to re-provision your API MSISDN to your API key.\n\nIf you do not have a provisioned dedicated number and you try to send a message via the API, you will get the error below in the response.\n\n<pre><code class=\"language-sh\">{\n  \"status\":\"400\",\n  \"code\":\"DELIVERY-IMPOSSIBLE\",\n  \"message\":\"Invalid \\'from\\' address specified\"\n}</code></pre>\n\nOR\n\n<pre><code class=\"language-sh\">{\n  \"status\":\"404\",\n  \"code\":\"RESOURCE-NOT-FOUND\",\n  \"message\":\"Invalid resource. Refer to API docs at https://dev.telstra.com\"\n}</code></pre>\n\n**Q: How long does my dedicated number stay active for?**\n\nA. When you provision a dedicated number, by default it will be active for 30 days.\nYou can use the `activeDays` parameter during the provisioning call to increment or decrement the number of days your dedicated number will remain active.\n\nNote that Free Trial apps will have 30 days as the maximum `activeDays` they can add to their provisioned number. If the Provisioning call is made several times within that 30-day period, it will return the `expiryDate` in the Unix format and will not add any activeDays until after that `expiryDate`.\n\n**Q: Can I send a broadcast message using the Telstra Messaging API?**\n\nA. Yes. Recipient numbers can be in the form of an array of strings if a broadcast message needs to be sent, allowing you to send to multiple mobile numbers in one API call.\n  A sample request body for this will be: `{\"to\":[\"+61412345678\",\"+61487654321\"],\"body\":\"Test Message\"}`\n\n**Q: How many recipient numbers can I send a broadcast message to at one time?**\n\nA. The API currently supports up to 10 recipient numbers in the `\"to\"` array.\n\n**Q: Can I send SMS and MMS to all countries?**\n\nA. You can send SMS and MMS to the countries in [this list](https://raw.githubusercontent.com/telstra/MessagingAPI-v2/master/docs/Telstra_Messaging_API_Country_Codes.csv), provided the destination network supports delivery.\nInternational message delivery is on a best-effort basis.\nMessages CANNOT be sent to countries which are subject to global sanctions namely: Burma, Côte d'Ivoire, Cuba, Iran, North Korea, Syria.\n\n**Q: Can I use `Alphanumeric Identifier` from my paid plan via credit card?**\n\nA. `Alphanumeric Identifier` is only available on Telstra Account paid plans, not through credit card paid plans.\n\n**Q: What is the maximum sized MMS that I can send?**\n\nA. This will depend on the carrier that will receive the MMS. For Telstra, it's up to 2MB. You will need to check with other carriers for their MMS size limits.\n\n**Q: How is the size of an MMS calculated?**\n\nA. Images are scaled up to approximately 4/3 when base64 encoded.\nAdditionally, there is approximately 200 bytes of overhead on each MMS.\nAssuming the maximum MMS that can be sent on Telstra’s network is 2MB, then the maximum image size that can be sent will be approximately 1.378MB (1.378 x 1.34 + 200, without SOAP encapsulation).\n\n**Q: How is an MMS classified as Small or Large?**\n\nA. MMSes with numberSegments below 600 are classed as Small whereas those that are bigger than 600 are classed as Large. They will be charged accordingly.\n\n**Q: Are SMILs supported by the Messaging API?**\n\nA. While there will be no error if you send an MMS with a SMIL presentation, the actual layout or sequence defined in the SMIL may not display as expected because most of the new smartphone devices ignore the SMIL presentation layer. SMIL was used in feature phones which had limited capability and SMIL allowed a *powerpoint type* presentation to be provided. Smartphones now have the capability to display video which is the better option for presentations. It is recommended that MMS messages should just drop the SMIL.\n\n**Q: How do I assign a delivery notification or callback URL?**\n\nA. You can assign a delivery notification or callback URL by adding the `notifyURL` parameter in the body of the request when you send a message. Once the message has been delivered, a notification will then be posted to this callback URL.\n\n**Q: Sometimes I am missing delivery receipts, why is this happening?**\n\nA. Telstra can guarantee delivery receipts are provided for any mobile service connected on Telstra's network so long as the destination handset is able to receive SMS or MMS messages. For other carriers, although messages will be delivered to valid handsets on those carriers, they do not have an obligation to provide delivery receipts back to Telstra.\n\n**Q: What is the difference between the `notifyURL` parameter in the Provisoning call versus the `notifyURL` parameter in the Send Message call?**\n\nA. The `notifyURL` in the Provisoning call will be the URL where replies to the provisioned number will be posted.\nOn the other hand, the `notifyURL` in the Send Message call will be the URL where the delivery notification will be posted, e.g. when an SMS has already been delivered to the recipient.\n\n**Q: Is there a specific format for the `notifyURL` parameter?**\n\nA. The `notifyURL` should be a complete URL address which includes the protocol identifier (e.g. `https://`).\nIt should also have a forward slash at the end if it is just a domain (e.g. http://www.example.com/).\n\n**Q: Can I use Messaging API from my paid plan via credit card billing?**\n\nA. No. As of 1 June 2020, developers no longer have access to Messaging API production keys with new credit card billing accounts. To access the paid account for Messaging API, you must create a company with a Telstra Billing account number associated. If you are not an existing Telstra customer, or if you are an existing Telstra customer but don't have a 10 digit account number ending in 0, please contact TelstraDev support by emailing telstradev@team.telstra.com and we will help you create a Telstra Account.\n\nIf you already have access to the Messaging API production keys with an existing Credit Card billing method, your account will not be affected by this change. This applies only to accounts created with Credit Card billing after 1 June 2020.\n\n# Getting Started\n\nBelow are the steps to get started with the Telstra Messaging API.\n  1. Generate an OAuth2 token using your `Client key` and `Client secret`.\n  2. Use the Provisioning call to create a subscription and receive a dedicated number.\n  3. Send a message to a specific mobile number.\n\n## Run in Postman\n<a\nhref=\"https://app.getpostman.com/run-collection/84aeaeb6569ba7a92c47#?env%5BTelstra%20Messaging%20API%20Environment%5D=W3sia2V5IjoiaG9zdCIsInZhbHVlIjoidGFwaS50ZWxzdHJhLmNvbSIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJ0ZXh0In0seyJrZXkiOiJjbGllbnRfaWQiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJ0ZXh0In0seyJrZXkiOiJjbGllbnRfc2VjcmV0IiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlLCJ0eXBlIjoidGV4dCJ9LHsia2V5IjoiYWNjZXNzX3Rva2VuIiwidmFsdWUiOm51bGwsImVuYWJsZWQiOnRydWUsInR5cGUiOiJ0ZXh0In0seyJrZXkiOiJtZXNzYWdlX2lkIiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlLCJ0eXBlIjoidGV4dCJ9XQ==\"><img\nsrc=\"https://run.pstmn.io/button.svg\" alt=\"Run in Postman\"/></a>\n\n## Sample Apps\n- [Perl Sample App](https://github.com/telstra/MessagingAPI-perl-sample-app)\n- [Happy Chat App](https://github.com/telstra/messaging-sample-code-happy-chat)\n- [PHP Sample App](https://github.com/developersteve/telstra-messaging-php)\n\n## SDK Repos\n- [Messaging API - PHP SDK](https://github.com/telstra/MessagingAPI-SDK-php)\n- [Messaging API - Python SDK](https://github.com/telstra/MessagingAPI-SDK-python)\n- [Messaging API - Ruby SDK](https://github.com/telstra/MessagingAPI-SDK-ruby)\n- [Messaging API - NodeJS SDK](https://github.com/telstra/MessagingAPI-SDK-node)\n- [Messaging API - .Net2 SDK](https://github.com/telstra/MessagingAPI-SDK-dotnet)\n- [Messaging API - Java SDK](https://github.com/telstra/MessagingAPI-SDK-Java)\n\n## Blog Posts\nFor more information on the Messaging API, you can read these blog posts:\n- [Get Started with the TelstraDev Messaging API](https://dev.telstra.com/content/get-started-telstradev-messaging-api)\n- [Connecting our community in an emergency with mobile messaging](https://dev.telstra.com/content/connecting-our-community-emergency-mobile-messaging-govhack-2020-part-1)\n- [Callbacks Part 1](https://dev.telstra.com/content/understanding-messaging-api-callbacks-part-1)\n- [Callbacks Part 2](https://dev.telstra.com/content/understanding-messaging-api-callbacks-part-2)\n- [Conversation via replyRequest](https://dev.telstra.com/content/conversation-telstra-messaging-api)\n",
    "license" : {
      "name" : "MIT",
      "url" : "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    },
    "termsOfService" : "https://www.telstra.com.au/customer-terms/business-government#cloud-services",
    "title" : "Telstra Messaging API",
    "version" : "2.2.10"
  },
  "servers" : [ {
    "url" : "https://tapi.telstra.com/v2"
  } ],
  "paths" : {
    "/oauth/token" : {
      "post" : {
        "description" : "To generate an OAuth2 Authentication token, pass through your `Client key` and `Client secret` that you received when you registered for the **API Free Trial** Product.\nThe grant_type should be left as `client_credentials` and the scope as `NSMS`. The token will expire in one hour.\n",
        "operationId" : "authToken",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "properties" : {
                  "client_id" : {
                    "description" : "",
                    "type" : "string"
                  },
                  "client_secret" : {
                    "description" : "",
                    "type" : "string"
                  },
                  "grant_type" : {
                    "default" : "client_credentials",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "NSMS",
                    "type" : "string"
                  }
                },
                "required" : [ "client_id", "client_secret", "grant_type" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuthResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "grant_type is incorrect. grant_type should be \"client_credentials\" (without quotes).\nRefer to the sample code for generate authentication token in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\n"
          },
          "401" : {
            "content" : { },
            "description" : "Either client_id or client_secret or both are not valid.\n\nEnsure the client_id and client_secret matches with your keys.  Keys can be found under https://dev.telstra.com/user/me/apps and ensure there are no white spaces in client_id and client_secret\n"
          },
          "404" : {
            "content" : { },
            "description" : "The requested URI does not exist\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service is currently unavailable.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running.\nIf the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request.\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "summary" : "Generate OAuth2 token",
        "tags" : [ "Authentication" ],
        "x-code-samples" : [ {
          "lang" : "curl",
          "source" : "#!/bin/bash\n# Obtain these keys from the Telstra Developer Portal\nCLIENT_KEY=\"your client key\"\nCLIENT_SECRET=\"your client secret\"\n\ncurl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \\\n-d 'grant_type=client_credentials&client_id=$CLIENT_KEY&client_secret=$CLIENT_SECRET&scope=NSMS' \\\n'https://tapi.telstra.com/v2/oauth/token'\n"
        } ]
      }
    },
    "/messages/provisioning/subscriptions" : {
      "delete" : {
        "description" : "Delete a mobile number subscription from an account\n",
        "operationId" : "deleteSubscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteNumberRequest"
              }
            }
          },
          "description" : "EmptyArr",
          "required" : true
        },
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "No Content"
          },
          "400" : {
            "content" : { },
            "description" : "For Free Trial App only - Delete Subscription is not allowed.\nFor Paid App only - Request flagged as containing invalid body. Request has been refused.\n\nRefer to the sample code for create Subscription  in the link for more details:\nhttps://dev.telstra.com/content/messaging-api#operation/createSubscription\n"
          },
          "401" : {
            "content" : { },
            "description" : "Either the token has expired or incorrect token was used.\nPlease re-run 'post' Authentication and use the updated token.\nRefer to the sample code for generate authentication token in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission.\nFor unaccepted credentials, please raise an issue with Telstradev support (telstradev@team.telstra.com) along with request details and error details. <br/><br/>\nOR <br/><br/>\nSpikeArrest - The API call rate limit has been exceeded\n\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "The URL is incorrect. Correct the URL and try again.\n\nThe correct URL can be found in the sample code section of: https://dev.telstra.com/content/messaging-api#operation/deleteSubscription\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Delete Subscription",
        "tags" : [ "Provisioning" ],
        "x-codegen-request-body-name" : "body"
      },
      "get" : {
        "description" : "Get mobile number subscription for an account\n",
        "operationId" : "getSubscription",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSubscriptionResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Either your subscription has expired or you have not created a valid subscription.\n\nRefer to the sample code for **create Subscription** in the link for more details: https://dev.telstra.com/content/messaging-api#operation/createSubscription\n"
          },
          "401" : {
            "content" : { },
            "description" : "Either the token has expired or incorrect token was used.\n\nPlease re-run 'post' Authentication and use the updated token.\nRefer to the sample code for **generate authentication token** in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\n\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission\n\nOR\n\nSpikeArrest-The API call rate limit has been exceeded\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "RESOURCE-NOT-FOUND - The requested URI does not exist. Please check the URL and try again.\nThe correct URL can be found in the sample code section of:\nhttps://dev.telstra.com/content/messaging-api#operation/getSubscription <br/><br/>\nOR <br/><br/>\nThe requested URI does not exist - There are no active subscription. Run create subscription.\nRefer to the sample code for  create Subscription  in the link for more details:\nhttps://dev.telstra.com/content/messaging-api#operation/createSubscription <br/><br/>\nOR <br/><br/>\nIf you created a subscription less than a minute ago, wait for a minute before calling get subscription again.\n\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Get Subscription",
        "tags" : [ "Provisioning" ]
      },
      "post" : {
        "description" : "Invoke the provisioning API to get a dedicated mobile number for an application.\n\nNote that Free Trial apps will have a 30-Day Limit for their provisioned number. If the Provisioning call is made several times within that 30-Day period, it will return the `expiryDate` in the Unix format and will not add any activeDays until after that `expiryDate`. After the `expiryDate`, you may make another Provisioning call to extend the activeDays by another 30-Days.\n\nFor paid apps, a provisioned number can be allotted for a maximum of 5 years. If a Provisioning call is made which will result to activeDays > 1825, a 409 `Active Days Max` response will be returned to indicate that the provisioned number is already valid for more than 5 years and that no update to activeDays has been made.\n\nOnce activeDays=0, the provisioned number will be quarantined for 90 days after which the number will be made available for other API customers to use. If you wish to continue using the same number, you will need to make another Provisioning call before or within the quarantine period to extend the activeDays. For paid apps, if the Provisioning call is made after the 90-day quarantine period, a different number may be assigned to the app.\n",
        "operationId" : "createSubscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProvisionNumberRequest"
              }
            }
          },
          "description" : "A JSON payload containing the required attributes",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisionNumberResponse"
                }
              }
            },
            "description" : "Created"
          },
          "400" : {
            "content" : { },
            "description" : "The request is missing parameter \"activeDays\".\n\nRefer to the sample code for **Create Subscription** in the link: https://dev.telstra.com/content/messaging-api#operation/createSubscription\n"
          },
          "401" : {
            "content" : { },
            "description" : "TECH-ERR - Either the token has expired or incorrect token was used. <br/><br/>\nOR <br/><br/>\nTECH-ERR - Technical error : Invalid API call as no apiproduct match found. Credit card billing method is not supported. Update billing method to Telstra Account from update billing method page. If you don't have a Telstra Account ending with 0 but ABN is available then you can request for a Telstra Account by filling the details in this link https://dev.telstra.com/content/requesting-telstra-billing-account\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\nRefer to the sample code for **generate authentication token** in the link for more details\nhttps://dev.telstra.com/content/messaging-api#section/Authentication\n\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission <br/><br/>\nOR <br/><br/>\nSpikeArrest-The API call rate limit has been exceeded.\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "The URL is incorrect. Correct the URL and try again.\n\nFor Free Trial:\nA Free Trial MSISDN may have been previously provisioned. Free Trial developers can be provisioned with only 1 Free Trial MSISDN.\nUse only the default App \"Free Trial APIs\". If a new app was created, it will throw this error.\nFor paid version:\nIf you are a customer with Telstra account (not credit card), use the keys available under https://dev.telstra.com/user/me/apps under the App name \"Production Keys\".\nExecute 'get' subscription and ensure you get successful response with valid subscription details.\nIf valid subscription not found, Please raise an issue with Telstradev support (telstradev@team.telstra.com) along with request details and error details.\n"
          },
          "405" : {
            "content" : { },
            "description" : "**For Free Trial**:\nA Free Trial MSISDN may have been previously provisioned. Free Trial developers can be provisioned with only 1 Free Trial MSISDN.\nUse only the default App \"Free Trial APIs\". If a new app was created, it will throw this error.\n**For paid version**:\nIf you are a customer with Telstra account (not credit card), use the keys available under https://dev.telstra.com/user/me/apps under the App name \"Production Keys\".\nExecute 'get' subscription and ensure you get successful response with valid subscription details.\nIf valid subscription not found, Please raise an issue with Telstradev support (telstradev@team.telstra.com) along with request details and error details.\n"
          },
          "409" : {
            "content" : { },
            "description" : "**For paid version**:\nYou cannot have activeDays greater than 1825.\n\nRun get subscription. For example: If active days (in the response) = 1000 days then run create subscription for 825 days (i.e. 1825-1000).\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request\n\nIf the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Create Subscription",
        "tags" : [ "Provisioning" ],
        "x-code-samples" : [ {
          "lang" : "curl",
          "source" : "#!/bin/bash\ncurl -X POST \\\nhttps://tapi.telstra.com/v2/messages/provisioning/subscriptions \\\n-H 'authorization: Bearer $ACCESS_TOKEN' \\\n-H 'cache-control: no-cache' \\\n-H 'content-type: application/json' \\\n-d '{\n\"activeDays\":30,\n\"notifyURL\":\"http://example.com/\"\n}'\n"
        } ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/messages/freetrial/bnum" : {
      "get" : {
        "description" : "Get list of destination numbers registered for Free Trial account.\n",
        "operationId" : "freeTrialBnumList",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Either your subscription has expired or you have not created a valid subscription or you have not created Bnums.\n\nRefer to the sample code for create Subscription in the link for more details: https://dev.telstra.com/content/messaging-api#operation/createSubscription\n"
          },
          "401" : {
            "content" : { },
            "description" : "Either the token has expired or incorrect token was used.\n\nPlease re-run 'post' Authentication and use the updated token.\n\nRefer to the sample code for **generate authentication token** in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\n\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission. <br/><br/>\nOR <br/><br/>\nSpikeArrest - The API call rate limit has been exceeded.\nYou will receive a SpikeArrest error in two possible situations:\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "The URL is incorrect. Correct the URL and try again.\n\nThe correct URL can be found in the sample code section of: https://dev.telstra.com/content/messaging-api#operation/freeTrialBnumList\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Free Trial Bnum List",
        "tags" : [ "Free Trial" ]
      },
      "post" : {
        "description" : "Before sending any messages, Free Trial apps are required to register destination mobile numbers that will be used while trialling Telstra's Messaging API. Up to five destination numbers can be registered. These are the `B numbers`. Any messages sent to numbers NOT on your Free Trial app's registered bnum list will fail.\n\nRegister your max 5 B numbers using this POST call. You can send this POST call multiple times, until the max 5 numbers has been reached. Once 5 B numbers have been registered, there is no way to override them and subsequent attempts to register bnums will fail. You are not able to change the list of registered B numbers after registering 5, so we recommend you include your own number to ensure that you can send and receive meaningful test messages while using the Free Trial. You can check which numbers have been registered by using the below GET /bnum call.\n",
        "operationId" : "freeTrialBnumRegister",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/inline_object",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "bnum" : {
                    "description" : "List of destination numbers",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "description" : "A JSON payload containing the required attributes",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_object"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : { },
            "description" : "FREE-TRIAL-MAX-BNUM. Free Trial apps are only allowed up to 5 destination numbers. or Free Trial apps cannot re-run registration once 5 destination numbers are assigned. <br/><br/>\nOR <br/><br/>\nBNUM-TOO-LONG. Ensure that destination number follows correct format example: +61401234567\n\nRefer to the sample code for Register Bnum  in the link for more details:\nhttps://dev.telstra.com/content/messaging-api#operation/freeTrialBnumRegister\n"
          },
          "401" : {
            "content" : { },
            "description" : "Either the token has expired or incorrect token was used.\nPlease re-run 'post' Authentication and use the updated token.\n\nRefer to the sample code for generate authentication token in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission.\n\nSpikeArrest-The API call rate limit has been exceeded.\n\nYou will receive a SpikeArrest error in two possible situations:\n\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\n\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "The URL is incorrect. Correct the URL and try again.\n\nThe correct URL can be found in the sample code section of: https://dev.telstra.com/content/messaging-api#operation/freeTrialBnumRegister\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Free Trial Bnum Register",
        "tags" : [ "Free Trial" ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/messages/sms" : {
      "get" : {
        "description" : "Messages are retrieved one at a time, starting with the earliest reply.\n\nThe API supports the encoding of emojis in the reply message. The emojis will be in their UTF-8 format.\n\nIf the subscription has a `notifyURL`, reply messages will be logged there instead.\n\n# SMS Reply with Notification URL\n\nWhen a reply is received, the API will send a POST to the subscription URL that has been previously specified.\n\n<pre><code class=\"language-sh\">{\n  \"to\":\"+61472880123\",\n  \"from\":\"+61412345678\",\n  \"body\":\"Foo4\",\n  \"sentTimestamp\":\"2018-04-20T14:24:35\",\n  \"messageId\":\"DMASApiA0000000146\"\n}</code></pre>\n\nThe fields are:\n\n| Field | Description |\n| --- |--- |\n| `to` | The number the message was sent to. |\n| `from` | The number the message was sent from. |\n| `body` | The content of the SMS response. |\n| `sentTimestamp` | Time handling of the message ended. |\n| `messageId` | The ID assigned to the message. |\n",
        "operationId" : "retrieveInboundSms",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InboundPollResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\nNOT-PROVISIONED\nRequest flagged as containing suspicious content\n"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission\nSpikeArrest-The API call rate limit has been exceeded\n"
          },
          "404" : {
            "content" : { },
            "description" : "The requested URI does not exist\nRESOURCE-NOT-FOUND\n"
          },
          "405" : {
            "content" : { },
            "description" : "The requested resource does not support the supplied verb"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the\nrequest cannot be processed e.g. email is required and it is not\nprovided in the request\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint :\nAn error has occurred while processing your request, please refer to\nAPI Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for\nthe requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Retrieve Inbound SMS",
        "tags" : [ "Messaging" ]
      },
      "post" : {
        "description" : "Send an SMS Message to a single or multiple mobile number/s.\n",
        "operationId" : "sendSms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendSMSRequest"
              }
            }
          },
          "description" : "A JSON or XML payload containing the recipient's phone number and text message.\nThis number can be in international format if preceeded by a '+' or in national format ('04xxxxxxxx') where x is a digit.\n",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageSentResponseSms"
                }
              }
            },
            "description" : "Created"
          },
          "400" : {
            "content" : { },
            "description" : "You may receive any of the below error message if API is unable to send SMS. While we work on improving the error handling through service error codes, check for the corrective action against each error message. Please reach out to telstradev@team.telstra.com if error persists.\nInvalid 'from' address specified - Ensure the 'from' field is as per API reference doc.\n\nDELIVERY-IMPOSSIBLE - Check the 'to' field and ensure it is a valid phone number as per API reference doc.\n\nFROM-MSISDN-TOO-LONG - Ensure the from address is not more than 15 chars in length.\n\nBODY-TOO-LONG - Request BODY cannot be more than 1999 UTF-8 characters for single recipient and 1998 UTF-8 characters for multiple recipients.\n\nBODY-MISSING. Request BODY is missing. Ensure appropriate request BODY is included as per the API reference doc.\n\nTO-MSISDN-TOO-LONG - Ensure phone number is in E.164 format. This number can be in international format \"to\": \"+61412345678\" or in national format \"0412345678\". Can be an array of strings if sending to multiple numbers: \"to\":[\"+61412345678\", \"+61418765432\"].\n\nTO-MSISDN-NOT-VALID - Ensure 'to' field's value is a valid phone number in E.164 format.\n\nTECH-ERR - Send the details to telstradev@team.telstra.com for troubleshooting this issue.\n\nBODY-NOT-VALID - Ensure Body does not contain characters other than UTF-8.\n\nNOT-PROVISIONED - Check get subscription is returning successful response, if not, run create subscription and try again. If issue persists e-mail telstradev@team.telstra.com.\n\nRequest flagged as containing suspicious content. Please check the request content but if problem persists contact support at telstradev@team.telstra.com with details of the request.\n\nFREE-TRIAL-NO-BNUM - For Free Trial App only. Run free trial bnum register before sending SMS.\n\nFREE-TRIAL-INVALID-BNUM - Free Trial apps are only allowed to send to specified destination numbers. Verify that all your destination numbers are in your list.\n\nTOO MANY DESTINATIONS - Do not use more than 10 recipients in a single call and ensure replyRequest=false or remove the [ ] brackets when using single recipient.\n\nRefer to the sample code for Send SMS in the link for more details: https://dev.telstra.com/content/messaging-api#operation/sendSms\n"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token:\nEither the token has expired or incorrect token was used. <br/><br/>\nOR <br/><br/>\nInvalid API call as no apiproduct match found:\nIf you are using credit card as billing method, Messaging API product has not been added to your Apps & Keys.\nPlease re-run 'post' Authentication and use the updated token.\nRefer to the sample code for generate authentication token in the link for more details https://dev.telstra.com/content/messaging-api#section/Authentication\n\nIf problem persists, write a post in the Messaging API forum https://dev.telstra.com/forums/messaging-api-forum for the TelstraDev admin to check the issue.\n"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission. <br/><br/>\nOR <br/><br/>\nMSG_Monetization_ERR. Credit Card API limit may have been reached, e-mail telstradev@team.telstra.com for support. If you are using the Free Trial account, this error shows you have exceeded the number of free messages available. <br/><br/>\nOR <br/><br/>\nSpikeArrest. The API call rate limit has been exceeded\nYou will receive a SpikeArrest error in two possible situations:\n\nA: You have exceeded your free trial quota. If you would like to continue using the Messaging API, please upgrade to a paid plan by creating a company with Telstra Billing details (not, credit card is no longer accepted for this API product).\n\nB: Concurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "404" : {
            "content" : { },
            "description" : "RESOURCE-NOT-FOUND - Subscription Expired. Re-provision your MSISDN through create subscription call using the same client credentials and try sending an SMS again. <br/><br/>\nOR <br/><br/>\nTO-MSISDN-NOT-VALID. Invalid resource: verify that a valid destination number is used. <br/><br/>\nOR <br/><br/>\nRESOURCE-NOT-FOUND. The requested URI does not exist. Ensure a correct URL is used.\nThe correct URL can be found in the sample code section of:\nhttps://dev.telstra.com/content/messaging-api#operation/createSubscription\n"
          },
          "405" : {
            "content" : { },
            "description" : "Only POST and GET methods are supported.\n\nRead the documentation for send SMS : https://dev.telstra.com/content/messaging-api#operation/sendSms\n"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request\n"
          },
          "429" : {
            "content" : { },
            "description" : "Too Many Requests.\n\nConcurrent API Calls are higher than supported, reduce the concurrent calls and try again. If problem persists, contact us at telstradev@team.telstra.com\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : A server error has occurred while processing your request or the endpoints provided does not exist in the API.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for the requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request.\n\nPlease correct the API endpoint and try again. If the error persists even after re-try, check our https://dev.telstra.com/api/status page to ensure the service is up and running. If the service is not up and running check our forum page https://dev.telstra.com/forums/api-live-status-page and leave a post to confirm the outage for the Telstradev admin to check the issue.\n"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Send SMS",
        "tags" : [ "Messaging" ],
        "x-code-samples" : [ {
          "lang" : "curl",
          "source" : "#!/bin/bash\n# Use the Messaging API to send an SMS\n# Note: only to: and body: are required\n#\n#\n# TO SINGLE NUMBER\nAccessToken=\"Access Token\"\nDest=\"Destination number\"\ncurl -X POST -H \"Authorization: Bearer $AccessToken\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"to\":\"$Dest\",\n    \"body\":\"Test Message\",\n    \"from\":\"+61412345678\",\n    \"validity\":5,\n    \"scheduledDelivery\":1,\n    \"notifyURL\":\"http://www.example.com/\",\n    \"replyRequest\": false,\n    \"priority\": false,\n    \"receiptOff\": true\n  }' https://tapi.telstra.com/v2/messages/sms\n#\n#\n# TO MULTIPLE NUMBERS\nAccessToken=\"Access Token\"\nDest1=\"Destination number1\"\nDest2=\"Destination number2\"\nDest3=\"Destination number3\"\ncurl -X post -H \"Authorization: Bearer $AccessToken\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"to\":[\"$Dest1\", \"$Dest2\", \"$Dest3\"],\n    \"body\":\"Test Message\"\n  }' https://tapi.telstra.com/v2/messages/sms\n"
        } ],
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/messages/sms/{messageId}/status" : {
      "get" : {
        "description" : "If no delivery receipt notification URL has been specified, it is possible to poll for the message status.\n\n**SMS Status with Notification URL**\n\nWhen a message has reached its final state, the API will send a POST to the URL that has been previously specified.\nUpon receiving this call it is expected that your servers will give a 204 (No Content) response.\n",
        "operationId" : "getSmsStatus",
        "parameters" : [ {
          "description" : "Unique identifier of a message - it is the value returned from a previous POST call to https://tapi.telstra.com/v2/messages/sms.\n",
          "in" : "path",
          "name" : "messageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/OutboundPollResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\n NOT-PROVISIONED\n Request flagged as containing suspicious content"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does\nnot have permission\n SpikeArrest-The API call rate limit has been exceeded"
          },
          "404" : {
            "content" : { },
            "description" : "The requested URI does not exist\n* OLD-NONEXISTANT-MESSAGE-ID. Invalid Message ID. Message ID is more than 7 days old. If `receiptOff` has been set to `true`, Delivery Receipts will be disabled and Message ID will not exist.\n* RESOURCE-NOT-FOUND\n"
          },
          "405" : {
            "content" : { },
            "description" : "The requested resource does not support the supplied verb"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint :\nAn error has occurred while processing your request, please refer to\nAPI Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for the requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Get SMS Status",
        "tags" : [ "Messaging" ],
        "x-code-samples" : [ {
          "lang" : "curl",
          "source" : "#!/bin/bash\n# Example of how to poll for a message status\nAccessToken=\"Consumer Access Token\"\nMessageId=\"Previous supplied Message Id, URL encoded\"\ncurl -X get -H \"Authorization: Bearer $AccessToken\" \\\n  -H \"Content-Type: application/json\" \\\n  \"https://tapi.telstra.com/v2/messages/sms/{messageId}/status\"\n"
        } ]
      }
    },
    "/messages/sms/healthcheck" : {
      "get" : {
        "description" : "Determine whether the SMS service is up or down.\n",
        "operationId" : "smsHealthCheck",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckResponse"
                }
              }
            },
            "description" : "Success"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint : An error has occurred while processing your request, please refer to API Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for the requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "summary" : "SMS Health Check",
        "tags" : [ "Messaging" ]
      }
    },
    "/messages/sms/multi" : {
      "post" : {
        "description" : "Send multiple SMS in one API call.\n",
        "operationId" : "sendMultipleSms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendSmsMultiRequest"
              }
            }
          },
          "description" : "A JSON payload containing the recipient's phone number and text message.\nThis number can be in international format if preceeded by a '+' or in national format ('04xxxxxxxx') where x is a digit.\n",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageSentResponseSms"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\n* DR-NOTIFY-URL-MISSING. `\"receiptOff\"` is missing or `\"receiptOff\":\"false\"` but notifyURL is missing\n* FREE-TRIAL-NO-BNUM. Free Trial apps need to specify destination numbers before sending a message.\n"
          },
          "403" : {
            "content" : { },
            "description" : "* Authorization credentials passed and accepted but account does not have permission.\n* SpikeArrest. The API call rate limit has been exceeded\n* MSG_Monetization_ERR. Credit Card API limit may have been reached. If you are using the free trial account, this error shows you have exceeded the number of free messages available.\n"
          },
          "404" : {
            "content" : { },
            "description" : "* RESOURCE-NOT-FOUND. If you have a previously provisioned number for your app, you may be getting this error because the provisioned number for your app has expired which will require you to re-provision your app.\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint : An error has occurred while processing your request, please refer to API Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for the requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Send Multiple SMS",
        "tags" : [ "Messaging" ],
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/messages/mms" : {
      "get" : {
        "description" : "Inbound messages are retrieved one at a time, starting with the earliest inbound message.\n\nIf the subscription has a `notifyURL`, reply messages will be logged there instead, i.e. `GET` and reply `notifyURL` are exclusive.\n\n# MMS Reply with Notification URL\n\nWhen a reply is received, the API will send a POST to the subscription URL that has been previously specified.\n\n<pre><code class=\"language-sh\">{\n  \"to\": \"+61418123456\",\n  \"from\": \"+61421987654\",\n  \"sentTimestamp\": \"2018-03-23T12:15:45+10:00\",\n  \"messageId\": \"XFRO1ApiA0000000111\",\n  \"subject\": \"Foo\",\n  \"envelope\": \"string\",\n  \"MMSContent\":\n    [\n      {\n        \"type\": \"text/plain\",\n        \"filename\": \"text_1.txt\",\n        \"payload\": \"string\"\n      },\n      {\n        \"type\": \"image/jpeg\",\n        \"filename\": \"sample.jpeg\",\n        \"payload\": \"string\"\n      }\n    ]\n}</code></pre>\n\nThe fields are:\n\n| Field | Description |\n| --- | --- |\n| `to` |The number the message was sent to. |\n| `from` | The number the message was sent from. |\n| `sentTimestamp` | Time handling of the message ended. |\n| `messageId` | Message Id assigned by the MMSC |\n| `subject` | The subject assigned to the message. |\n| `envelope` | Information about terminal type and originating operator. |\n| `MMSContent` | An array of the actual content of the reply message. |\n| `type` | The content type of the message. |\n| `filename` | The filename for the message content. |\n| `payload` | The content of the message. |\n",
        "operationId" : "retrieveInboundMms",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMmsResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\nNOT-PROVISIONED\nRequest flagged as containing suspicious content\n"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission\nSpikeArrest-The API call rate limit has been exceeded\n"
          },
          "404" : {
            "content" : { },
            "description" : "The requested URI does not exist\nRESOURCE-NOT-FOUND\n"
          },
          "405" : {
            "content" : { },
            "description" : "The requested resource does not support the supplied verb"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the\nrequest cannot be processed e.g. email is required and it is not\nprovided in the request\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint :\nAn error has occurred while processing your request, please refer to\nAPI Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for\nthe requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Retrieve Inbound MMS",
        "tags" : [ "Messaging" ]
      },
      "post" : {
        "description" : "Send MMS",
        "operationId" : "sendMms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMmsRequest"
              }
            }
          },
          "description" : "A JSON or XML payload containing the recipient's phone number and MMS message.\nThe recipient number should be in the format '04xxxxxxxx' where x is a digit.\n",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageSentResponseMms"
                }
              }
            },
            "description" : "Created"
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\n* MMS-TYPE-MISSING\n* MMS-PAYLOAD-MISSING\n* MMS-FILENAME-MISSING\n* DELIVERY-IMPOSSIBLE\n* TO-MSISDN-NOT-VALID\n* SENDER-MISSING\n* DELIVERY-IMPOSSIBLE\n* SUBJECT-TOO-LONG\n* FROM-MSISDN-TOO-LONG\n* TO-MSISDN-TOO-LONG\n* NOT-PROVISIONED\n* Request flagged as containing suspicious content\n* FREE-TRIAL-NO-BNUM. Free Trial apps need to specify destination numbers before sending a message.\n"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token"
          },
          "403" : {
            "content" : { },
            "description" : "* Authorization credentials passed and accepted but account does not have permission.\n* SpikeArrest. The API call rate limit has been exceeded\n* MSG_Monetization_ERR. Credit Card API limit may have been reached. If you are using the free trial account, this error shows you have exceeded the number of free messages available.\n"
          },
          "404" : {
            "content" : { },
            "description" : "* RESOURCE-NOT-FOUND. If you have a previously provisioned number for your app, you may be getting this error because the provisioned number for your app has expired which will require you to re-provision your app.\n* RESOURCE-NOT-FOUND. The requested URI does not exist.\n"
          },
          "405" : {
            "content" : { },
            "description" : "The requested resource does not support the supplied verb"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint :\nAn error has occurred while processing your request, please refer to API Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for\nthe requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Send MMS",
        "tags" : [ "Messaging" ],
        "x-codegen-request-body-name" : "body"
      }
    },
    "/messages/mms/{messageid}/status" : {
      "get" : {
        "description" : "Get MMS Status",
        "operationId" : "getMmsStatus",
        "parameters" : [ {
          "description" : "Unique identifier of a message - it is the value returned from a previous POST call to https://tapi.telstra.com/v2/messages/mms\n",
          "in" : "path",
          "name" : "messageid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/OutboundPollResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : { },
            "description" : "Invalid or missing request parameters\n NOT-PROVISIONED\n Request flagged as containing suspicious content"
          },
          "401" : {
            "content" : { },
            "description" : "Invalid access token. Please try with a valid token"
          },
          "403" : {
            "content" : { },
            "description" : "Authorization credentials passed and accepted but account does not have permission\nSpikeArrest-The API call rate limit has been exceeded\n"
          },
          "404" : {
            "content" : { },
            "description" : "The requested URI does not exist\nOLD-NONEXISTANT-MESSAGE-ID\nRESOURCE-NOT-FOUND\n"
          },
          "405" : {
            "content" : { },
            "description" : "The requested resource does not support the supplied verb"
          },
          "415" : {
            "content" : { },
            "description" : "API does not support the requested content type"
          },
          "422" : {
            "content" : { },
            "description" : "The request is formed correctly, but due to some condition the request cannot be processed e.g. email is required and it is not provided in the request\n"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint :\nAn error has occurred while processing your request, please refer to API Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for\nthe requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "security" : [ {
          "auth" : [ "NSMS" ]
        } ],
        "summary" : "Get MMS Status",
        "tags" : [ "Messaging" ]
      }
    },
    "/messages/mms/healthcheck" : {
      "get" : {
        "description" : "Determine whether the MMS service is up or down.\n",
        "operationId" : "mmsHealthCheck",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckResponse"
                }
              }
            },
            "description" : "Success"
          },
          "500" : {
            "content" : { },
            "description" : "Technical error : Unable to route the message to a Target Endpoint : An error has occurred while processing your request, please refer to API Docs for summary on the issue\n"
          },
          "501" : {
            "content" : { },
            "description" : "The HTTP method being used has not yet been implemented for the requested resource\n"
          },
          "503" : {
            "content" : { },
            "description" : "The service requested is currently unavailable"
          },
          "default" : {
            "content" : { },
            "description" : "An internal error occurred when processing the request"
          }
        },
        "summary" : "MMS Health Check",
        "tags" : [ "Messaging" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "inline_object" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_object"
            }
          }
        },
        "required" : true
      }
    },
    "schemas" : {
      "ProvisionNumberRequest" : {
        "properties" : {
          "activeDays" : {
            "default" : 30,
            "description" : "The number of days before for which this number is provisioned.\n\nFor Free Trial apps, the value of this field will be ignored and instead the default value of 30 days will be used.\n",
            "example" : 1825,
            "format" : "int32",
            "type" : "integer"
          },
          "notifyURL" : {
            "description" : "A notification URL that will be POSTed to whenever a new message (i.e. a reply to a message sent) arrives at this destination address.\n\nIf this is not provided then you can use the Get /sms or /mms API to poll for reply messages.\n\nIf you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/).\n\n*Please note that the notification URLs and the Get /sms or /mms call are exclusive. If a notification URL has been set then the GET call will not provide any useful information.*\n",
            "example" : "http://wwww.example.com/",
            "type" : "string"
          }
        },
        "required" : [ "activeDays" ],
        "title" : "ProvisionNumberRequest",
        "type" : "object"
      },
      "ProvisionNumberResponse" : {
        "properties" : {
          "destinationAddress" : {
            "description" : "The MSISDN that is assigned to the app.",
            "example" : "+61412345678",
            "type" : "string"
          },
          "activeDays" : {
            "description" : "The number of days that the MSISDN is assigned to the app.",
            "example" : "1825",
            "type" : "string"
          },
          "expiryDate" : {
            "description" : "For Free Trial only. This field specifies the Unix time when apps can extend the assignment of their MSISDN. Extension can be done only once every 30 days.",
            "example" : 1534463077362,
            "type" : "number"
          }
        },
        "title" : "ProvisionNumberResponse",
        "type" : "object"
      },
      "DeleteNumberRequest" : {
        "properties" : {
          "emptyArr" : {
            "default" : 0,
            "description" : "Empty Arr",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "title" : "DeleteNumberRequest",
        "type" : "object"
      },
      "GetSubscriptionResponse" : {
        "properties" : {
          "activeDays" : {
            "description" : "Number of active days",
            "type" : "string"
          },
          "notifyURL" : {
            "description" : "Notify url configured",
            "type" : "string"
          },
          "destinationAddress" : {
            "description" : "The mobile phone number that was allocated",
            "type" : "string"
          }
        },
        "title" : "ProvisionNumberResponse",
        "type" : "object"
      },
      "SendSMSRequest" : {
        "properties" : {
          "to" : {
            "description" : "Phone number (in E.164 format) to send the SMS to.\nThis number can be in international format `\"to\": \"+61412345678\"` or in national format.\nCan be an array of strings if sending to multiple numbers: `\"to\":[\"+61412345678\", \"+61418765432\"]`\n",
            "example" : "",
            "type" : "string"
          },
          "body" : {
            "description" : "The text body of the message. Messages longer than 160 characters will be counted as multiple messages.\nThis field contains the message text, this can be up to 1900 (for a single recipient) or 500 (for multiple recipients) UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device\n",
            "example" : "Test Message",
            "type" : "string"
          },
          "from" : {
            "description" : "This will be the source address that will be displayed on the receiving device. You can set an Alphanumeric Sender ID of up to 11 characters. Phone numbers in the `from` attribute will be blocked (400 or 500 error) to prevent number spoofing.\n\nSupport for alphanumeric `from` is only guaranteed when sending messages to Telstra destinations.\nMost standard ASCII characters are accepted in the alphanumeric `from` attribute, however there are some limitations. The following characters are allowed in the alphanumeric `from` attribute: any alphabetic character (e.g. `abc`), any number mixed with alphabetic characters (e.g. `abc123`), uppercase and lowercase characters (e.g. `aBc`), any of the following special characters mixed with alphabetic characters are supported `~!@#$%^&*()~_~+-={}|[];'?,./` (e.g. `abc~!@`), any combination of lowercase, uppercase, numeric or supported special characters (e.g. `abc@#123DE`).\n\nIf attribute is not present, the service will use the mobile number associated with the application (in E.164 format).\n\nIf `replyRequest` is set to true, `from` field will be ignored.\n\n*Please note:*\n\n*- Alphanumeric Sender ID is only available on Telstra Account paid plans, not through Free Trial or Credit Card plans.*\n\n*- Support for Alphanumeric Sender ID is only guaranteed when sending messages to Telstra destinations.*\n",
            "example" : "Foo_App",
            "type" : "string"
          },
          "validity" : {
            "description" : "How long the platform should attempt to deliver the message for.\n\nThis period is specified in minutes from the message.\n\nNormally if the message cannot be delivered immediately, it will be stored and delivery will be periodically reattempted. The network will attempt to send the message for up to seven days. It is possible to define a period smaller than 7 days by including this parameter and specifying the number of minutes that delivery should be attempted.\n\ne.g.: including `\"validity\": 60` will specify that if a message can't be delivered within the first 60 minutes then the network should stop.\n",
            "example" : 5,
            "format" : "int32",
            "type" : "integer"
          },
          "scheduledDelivery" : {
            "description" : "How long the platform should wait before attempting to send the message - specified in minutes.\n\ne.g.: If `\"scheduledDelivery\": 120` is included, then the network will not attempt to start message delivery for two hours after the message has been submitted\n",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "notifyURL" : {
            "description" : "Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc. Please refer to the Delivery Status section for more information.\n\nIf you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/).\n",
            "example" : "http://www.example.com/",
            "type" : "string"
          },
          "replyRequest" : {
            "description" : "If false or not present, then normal message handling is implemented.\n\nIf set to true, the reply message functionality will be implemented. If the `from` field is present, it will be ignored.\n\nWhen set to true, network will use a temporary number to deliver this message. All messages sent by a mobile to this temporary number will be stored against the same `messageId`. If a `notifyURL` is provided then user replies will be delivered to the URL where `messageId` will be same as `messageId` in the response to the original API request.\n\nThe replyRequest thread is kept active for 7 days. Up to 50 replyRequest threads and `messageIds` can be supported per destination number.\n",
            "example" : false,
            "type" : "boolean"
          },
          "priority" : {
            "description" : "When messages are queued up for a number, then it is possible to set where a new message will be placed in the queue. If the priority is set to true then the new message will be placed ahead of all messages with a normal priority. If there are no messages queued for the number, then this parameter has no effect.\n",
            "example" : false,
            "type" : "boolean"
          },
          "receiptOff" : {
            "description" : "Whether Delivery Receipt will be sent back or not.\n\nSetting this field to `true` will disable Delivery Receipts. The `notifyURL` field will be ignored, if there is one in the payload. An \"OLD-NONEXISTANT-MESSAGE-ID\" error will also be returned upon Polling for the SMS Status.\n",
            "example" : true,
            "type" : "boolean"
          },
          "userMsgRef" : {
            "description" : "Optional field used by some clients for custom reporting.\n",
            "example" : "foo-app",
            "type" : "string"
          }
        },
        "required" : [ "body", "to" ],
        "title" : "SendSMSRequest",
        "type" : "object"
      },
      "MessageSentResponseSms" : {
        "properties" : {
          "messages" : {
            "description" : "An array of messages.",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            },
            "type" : "array"
          },
          "Country" : {
            "description" : "An array of the countries to which the destination MSISDNs belong.",
            "example" : [ {
              "AUS" : 1
            } ],
            "items" : {
              "properties" : { },
              "type" : "object"
            },
            "type" : "array"
          },
          "messageType" : {
            "description" : "This returns whether the message sent was a SMS or MMS.",
            "example" : "SMS",
            "type" : "string"
          },
          "numberSegments" : {
            "description" : "A message which has 160 GSM-7 characters or less will have numberSegments=1.\nNote that multi-part messages which are over 160 GSM-7 characters will include the User Data Header as part of the numberSegments. The User Data Header is being used for the re-assembly of the messages.\n",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "messageType", "messages", "numberSegments" ],
        "title" : "MessageSentResponse",
        "type" : "object"
      },
      "SendMmsRequest" : {
        "properties" : {
          "to" : {
            "description" : "This is the destination address.\nCan be an array of strings if sending to multiple numbers: \"to\":[\"+61412345678\", \"+61418765432\"]\n",
            "example" : "",
            "type" : "string"
          },
          "from" : {
            "description" : "This will be the source address that will be displayed on the receiving device. You can set an Alphanumeric Sender ID of up to 11 characters. Phone numbers in the `from` attribute will be blocked (400 or 500 error) to prevent number spoofing.\n\nSupport for alphanumeric `from` is only guaranteed when sending messages to Telstra destinations.\nMost standard ASCII characters are accepted in the alphanumeric `from` attribute, however there are some limitations. The following characters are allowed in the alphanumeric `from` attribute: any alphabetic character (e.g. `abc`), any number mixed with alphabetic characters (e.g. `abc123`), uppercase and lowercase characters (e.g. `aBc`), any of the following special characters mixed with alphabetic characters are supported `~!@#$%^&*()~_~+-={}|[];'?,./` (e.g. `abc~!@`), any combination of lowercase, uppercase, numeric or supported special characters (e.g. `abc@#123DE`). All other characters, including spaces and extended ASCII characters, are not supported (e.g. `<>:\"\\`).\n\nIf attribute is not present, the service will use the mobile number associated with the application (in E.164 format).\n\nIf `replyRequest` is set to true, `from` field will be ignored.\n\n*Please note:*\n\n*- Alphanumeric Sender ID is only available on Telstra Account paid plans, not through Free Trial or Credit Card plans.*\n\n*- Support for Alphanumeric Sender ID is only guaranteed when sending messages to Telstra destinations.*\n\n*- When Alphanumeric Sender ID is used in sending MMS, Delivery Receipts will NOT be returned.*\n",
            "type" : "string"
          },
          "subject" : {
            "description" : "The subject that will be used in an MMS message. Subject is limited to maximum of 64 characters.\n\nSome special characters need to be encoded if used in the `subject` field (e.g. &amp;amp; for & and &amp;lt; for <).\n",
            "type" : "string"
          },
          "notifyURL" : {
            "description" : "Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc. Please refer to the Delivery Status section for more information.\n\nIf you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/).\n",
            "example" : "http://www.example.com/",
            "type" : "string"
          },
          "replyRequest" : {
            "description" : "If false or not present, then normal message handling is implemented.\n\nIf set to true, the reply message functionality will be implemented. If the `from` field is present, it will be ignored.\n\nWhen set to true, network will use a temporary number to deliver this message. All messages sent by a mobile to this temporary number will be stored against the same `messageId`. If a `notifyURL` is provided then user replies will be delivered to the URL where `messageId` will be same as `messageId` in the response to the original API request.\n\nThe replyRequest thread is kept active for 7 days. Up to 50 replyRequest threads and `messageIds` can be supported per destination number.\n",
            "type" : "boolean"
          },
          "MMSContent" : {
            "description" : "An array of content that will be sent in an MMS message. If this array is present it will cause the `body` element to be ignored, and the message will be sent as an MMS.\n",
            "items" : {
              "$ref" : "#/components/schemas/MMSContent"
            },
            "type" : "array"
          }
        },
        "required" : [ "MMSContent", "to" ],
        "title" : "Send MMS Request",
        "type" : "object"
      },
      "MessageSentResponseMms" : {
        "properties" : {
          "messages" : {
            "description" : "An array of messages.",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            },
            "type" : "array"
          },
          "MmsMediaKB" : {
            "description" : "Indicates the message size in kB of the MMS sent.\n",
            "example" : 2,
            "format" : "int32",
            "type" : "integer"
          },
          "Country" : {
            "description" : "An array of the countries to which the destination MSISDNs belong.",
            "example" : [ {
              "AUS" : 1
            } ],
            "items" : {
              "properties" : { },
              "type" : "object"
            },
            "type" : "array"
          },
          "messageType" : {
            "description" : "This returns whether the message sent was a SMS or MMS.",
            "example" : "MMS",
            "type" : "string"
          },
          "numberSegments" : {
            "description" : "MMS with numberSegments below 600 are classed as Small whereas those that are bigger than 600 are classed as Large. They will be charged accordingly.\n",
            "example" : 4,
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "messageType", "messages", "numberSegments" ],
        "title" : "MessageSentResponse",
        "type" : "object"
      },
      "Message" : {
        "properties" : {
          "to" : {
            "description" : "Just a copy of the number the message is sent to.",
            "example" : "+61412345678",
            "type" : "string"
          },
          "deliveryStatus" : {
            "description" : "Gives an indication if the message has been accepted for delivery. The description field contains information on why a message may have been rejected.\n",
            "example" : "MessageWaiting",
            "type" : "string"
          },
          "messageId" : {
            "description" : "For an accepted message, ths will be a unique reference that can be used to check the messages status. Please refer to the Delivery Notification section.\n\nNote that `messageId` will be different for each number that the message was sent to.\n",
            "example" : "d997474900097a1f0000000008d7e18102cc0901-1261412345678",
            "type" : "string"
          },
          "messageStatusURL" : {
            "description" : "For an accepted message, ths will be the URL that can be used to check the messages status. Please refer to the Delivery Notification section.\n",
            "example" : "https://tapi.telstra.com/v2/messages/sms/d997474900097a1f0000000008d7e18102cc0901-1261412345678/status\n",
            "type" : "string"
          }
        },
        "required" : [ "deliveryStatus", "messageId", "to" ],
        "title" : "Message",
        "type" : "object"
      },
      "OutboundPollResponse" : {
        "properties" : {
          "to" : {
            "description" : "The phone number (recipient) the message was sent to (in E.164 format).\n",
            "example" : "+61418123456",
            "type" : "string"
          },
          "sentTimestamp" : {
            "description" : "The date and time when the handling of the message completed.",
            "example" : "2017-03-17T09:16:54+10:00",
            "type" : "string"
          },
          "receivedTimestamp" : {
            "description" : "The date and time when the message was received by the API.",
            "example" : "2017-03-17T09:16:49+10:00",
            "type" : "string"
          },
          "deliveryStatus" : {
            "$ref" : "#/components/schemas/Status"
          }
        },
        "title" : "OutboundPollResponse",
        "type" : "object"
      },
      "Status" : {
        "description" : "PEND = pending delivery, in transit or retry. Message Service Centre is working on delivering the message. Some messages may have this as the final status if no delivery receipt is sent back by the terminating network.\n\nDELIVRD = message delivered to target device.\n\nEXPIRED = message could not be delivered in delivery timeframe. Message not delivered.\n\nDELETED = in some cases a message not yet delivered can be removed from the queue. Message not delivered.\n\nUNDVBL = some issue prevented delivery even though the message was accepted for delivery attempt. For example, service deactivated before delivery accomplished. Message not delivered.\n\nREJECTD = only occurs at the time of submission. Delivery will not even be attempted.\n\nUnknown\n",
        "example" : "DELIVRD",
        "title" : "Status",
        "type" : "string"
      },
      "OAuthResponse" : {
        "properties" : {
          "access_token" : {
            "description" : "OAuth access token",
            "type" : "string"
          },
          "token_type" : {
            "description" : "OAuth token type",
            "type" : "string"
          },
          "expires_in" : {
            "description" : "OAuth expiry time in seconds. Tokens expire in one hour.",
            "type" : "string"
          }
        },
        "title" : "OAuthResponse",
        "type" : "object"
      },
      "GetMmsResponse" : {
        "properties" : {
          "status" : {
            "description" : "The final state of the message.\n",
            "example" : "RECEIVED",
            "type" : "string"
          },
          "destinationAddress" : {
            "description" : "The number the message was sent to.\n",
            "example" : "61412345678",
            "type" : "string"
          },
          "senderAddress" : {
            "description" : "The number the message was sent from.\n",
            "example" : "61487654321",
            "type" : "string"
          },
          "subject" : {
            "description" : "The subject assigned to the message.\n",
            "type" : "string"
          },
          "messageId" : {
            "description" : "Message Id assigned by the MMSC.\n",
            "type" : "string"
          },
          "apiMsgId" : {
            "description" : "Message Id assigned by the API.\n",
            "type" : "string"
          },
          "sentTimestamp" : {
            "description" : "Time handling of the message ended.\n",
            "example" : "2018-11-23T16:14:02+10:00",
            "type" : "string"
          },
          "MMSContent" : {
            "description" : "An array of content that was received in an MMS message.\n",
            "items" : {
              "$ref" : "#/components/schemas/MMSContent"
            },
            "type" : "array"
          }
        },
        "required" : [ "MMSContent", "destinationAddress", "senderAddress", "sentTimestamp", "status" ],
        "title" : "Get MMS Response",
        "type" : "object"
      },
      "MMSContent" : {
        "properties" : {
          "type" : {
            "description" : "The following types are supported audio/amr audio/aac audio/mp3 audio/mpeg3 audio/mpeg audio/mpg audio/wav audio/3gpp audio/mp4 image/gif image/jpeg image/jpg image/png image/bmp video/mpeg4 video/mp4 video/mpeg video/3gpp video/3gp video/h263 text/plain text/x-vCard text/x-vCalendar\n",
            "type" : "string"
          },
          "filename" : {
            "description" : "The file name to be associated with the content. Some devices will display this file name with a placeholder for the content.\n",
            "type" : "string"
          },
          "payload" : {
            "description" : "Base64 encoded message content.\n",
            "type" : "string"
          }
        },
        "required" : [ "payload", "type" ],
        "title" : "MMSContent",
        "type" : "object"
      },
      "InboundPollResponse" : {
        "description" : "Poll for incoming messages returning the latest. Only works if no callback url was specified when provisioning a number.\n",
        "properties" : {
          "status" : {
            "description" : "message status",
            "type" : "string"
          },
          "destinationAddress" : {
            "description" : "The phone number (recipient) that the message was sent to (in E.164 format).\n",
            "type" : "string"
          },
          "senderAddress" : {
            "description" : "The phone number (sender) that the message was sent from (in E.164 format).\n",
            "type" : "string"
          },
          "message" : {
            "description" : "Text of the message that was sent",
            "type" : "string"
          },
          "messageId" : {
            "description" : "Message Id",
            "type" : "string"
          },
          "sentTimestamp" : {
            "description" : "The date and time when the message was sent by recipient.",
            "type" : "string"
          }
        },
        "title" : "InboundPollResponse",
        "type" : "object"
      },
      "HealthCheckResponse" : {
        "description" : "Information regarding service being up or down.\n",
        "properties" : {
          "status" : {
            "description" : "message status",
            "example" : "up",
            "type" : "string"
          }
        },
        "title" : "HealthCheckResponse",
        "type" : "object"
      },
      "SendSmsMultiRequest" : {
        "properties" : {
          "smsMulti" : {
            "description" : "Multiple SMS. Up to 10 messages can be sent in one API call.",
            "items" : {
              "$ref" : "#/components/schemas/MessageMulti"
            },
            "type" : "array"
          },
          "notifyURL" : {
            "description" : "Contains a URL that will be called once your message has been processed. The status may be delivered, expired, deleted, etc. Please refer to the Delivery Status section for more information.\n\nIf you are using a domain URL you must include the forward slash at the end of the URL (e.g. http://www.example.com/).\n\nThis is required when `\"receiptOff\"` is missing or `\"receiptOff\":\"false\"`.\n",
            "example" : "http://www.example.com/",
            "type" : "string"
          }
        },
        "title" : "SendSmsMultiRequest",
        "type" : "object"
      },
      "MessageMulti" : {
        "properties" : {
          "to" : {
            "description" : "Phone number (in E.164 format) to send the SMS to.\nThis number can be in international format `\"to\": \"+61412345678\"` or in national format.\n",
            "example" : "+61412345678",
            "type" : "string"
          },
          "body" : {
            "description" : "The text body of the message. Messages longer than 160 characters will be counted as multiple messages.\n\nThis field contains the message text, this can be up to 1900 (for a single recipient) or 500 (for multiple recipients) UTF-8 characters. As mobile devices rarely support the full range of UTF-8 characters, it is possible that some characters may not be translated correctly by the mobile device\n",
            "example" : "Test Message",
            "type" : "string"
          },
          "receiptOff" : {
            "description" : "Whether Delivery Receipt will be sent back or not.\n\nSetting this field to `true` will disable Delivery Receipts. The `notifyURL` field will be ignored, if there is one in the payload. An \"OLD-NONEXISTANT-MESSAGE-ID\" 400 error will also be returned upon Polling for the SMS Status.\n",
            "example" : true,
            "type" : "boolean"
          }
        },
        "title" : "MessageMulti",
        "type" : "object"
      },
      "inline_response_200" : {
        "properties" : {
          "bnum" : {
            "description" : "List of destination numbers",
            "example" : "",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "inline_object" : {
        "properties" : {
          "bnum" : {
            "description" : "List of destination numbers",
            "example" : "",
            "type" : "string"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "auth" : {
        "flows" : {
          "clientCredentials" : {
            "scopes" : {
              "NSMS" : "NSMS"
            },
            "tokenUrl" : "https://tapi.telstra.com/v2/oauth/token"
          }
        },
        "type" : "oauth2"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}